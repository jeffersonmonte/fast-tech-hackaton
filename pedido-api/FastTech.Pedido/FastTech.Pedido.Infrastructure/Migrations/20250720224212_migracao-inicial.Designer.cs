// <auto-generated />
using System;
using FastTech.Pedido.Infrastructure.Persistance.Command;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastTech.Pedido.Infrastructure.Migrations
{
    [DbContext(typeof(PedidoCommandDbContext))]
    [Migration("20250720224212_migracao-inicial")]
    partial class migracaoinicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdItem")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemPedido", (string)null);
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CodigoPedido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("DataHoraCancelamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormaEntrega")
                        .HasColumnType("int");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.StatusPedidoHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("IdFuncionarioResponsavel")
                        .HasColumnType("char(36)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("StatusPedidoHistorico", (string)null);
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("FastTech.Pedido.Domain.Entities.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.Pedido", b =>
                {
                    b.OwnsOne("FastTech.Pedido.Domain.ValueObjects.ClientePedido", "Cliente", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("ClienteEmail");

                            b1.Property<Guid>("IdCliente")
                                .HasColumnType("char(36)")
                                .HasColumnName("ClienteId");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("ClienteNome");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.StatusPedidoHistorico", b =>
                {
                    b.HasOne("FastTech.Pedido.Domain.Entities.Pedido", null)
                        .WithMany("Historico")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("FastTech.Pedido.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Historico");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
