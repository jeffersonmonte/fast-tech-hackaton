// <auto-generated />
using System;
using FastTech.Catalogo.Infrastructure.Persistence.Command;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastTech.Catalogo.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogoCommandDbContext))]
    [Migration("20250705163953_migracao-inicial")]
    partial class migracaoinicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CardapioItem", b =>
                {
                    b.Property<Guid>("CardapioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("char(36)");

                    b.HasKey("CardapioId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CardapioItem");
                });

            modelBuilder.Entity("FastTech.Catalogo.Domain.Entities.Cardapio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Cardapio", (string)null);
                });

            modelBuilder.Entity("FastTech.Catalogo.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("TipoRefeicaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TipoRefeicaoId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("FastTech.Catalogo.Domain.Entities.TipoRefeicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoRefeicao", (string)null);
                });

            modelBuilder.Entity("CardapioItem", b =>
                {
                    b.HasOne("FastTech.Catalogo.Domain.Entities.Cardapio", null)
                        .WithMany()
                        .HasForeignKey("CardapioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastTech.Catalogo.Domain.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastTech.Catalogo.Domain.Entities.Item", b =>
                {
                    b.HasOne("FastTech.Catalogo.Domain.Entities.TipoRefeicao", "TipoRefeicao")
                        .WithMany("Itens")
                        .HasForeignKey("TipoRefeicaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("FastTech.Catalogo.Domain.ValueObjects.Preco", "Preco", b1 =>
                        {
                            b1.Property<Guid>("ItemId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(65,30)")
                                .HasColumnName("Preco");

                            b1.HasKey("ItemId");

                            b1.ToTable("Item");

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.Navigation("Preco")
                        .IsRequired();

                    b.Navigation("TipoRefeicao");
                });

            modelBuilder.Entity("FastTech.Catalogo.Domain.Entities.TipoRefeicao", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
